!function(){"use strict";const e="send-post-requests",t="get-posts-requests";let s;let n="SE1PWA",r=["ccm.se1-menu.js","ccm.nav-hamburger.js","style.css","ccm.sw-notification.js","https://kaul.inf.h-brs.de/data/2017/se1/le00.html","https://kaul.inf.h-brs.de/data/2017/se1/le01.html","https://kaul.inf.h-brs.de/data/2017/se1/le02.html","https://kaul.inf.h-brs.de/data/2017/se1/le03.html","https://kaul.inf.h-brs.de/data/2017/se1/le04.html","https://kaul.inf.h-brs.de/data/2017/se1/le05.html","https://kaul.inf.h-brs.de/data/2017/se1/le06.html","https://kaul.inf.h-brs.de/data/2017/se1/le07.html","https://kaul.inf.h-brs.de/data/2017/se1/le08.html","https://kaul.inf.h-brs.de/data/2017/se1/le09.html","https://kaul.inf.h-brs.de/data/2017/se1/le10.html","https://kaul.inf.h-brs.de/data/2017/se1/le11.html","https://kaul.inf.h-brs.de/data/ccm/form/ccm.form.js","https://kaul.inf.h-brs.de/data/ccm/upload/ccm.upload.js","https://kaul.inf.h-brs.de/data/ccm/highlight/ccm.highlight.js","https://kaul.inf.h-brs.de/data/ccm/show_solutions/ccm.show_solutions.js","https://kaul.inf.h-brs.de/data/ccm/exercise/ccm.exercise.js","https://kaul.inf.h-brs.de/data/ccm/form/resources/default.css","https://akless.github.io/ccm-components/user/versions/ccm.user-2.0.0.min.js","https://akless.github.io/ccm-components/log/versions/ccm.log-1.0.0.min.js","https://akless.github.io/ccm-components/content/versions/ccm.content-2.0.0.min.js","https://akless.github.io/ccm/ccm.js","https://kaul.inf.h-brs.de/data/2017/se1/json/log_configs.js","https://akless.github.io/ccm-components/libs/md5/md5.min.js"];self.addEventListener("fetch",function(e){/https:\/\/kaul.inf.h-brs.de\/login\/login.php.*/.test(e.request.url.href)||(e.respondWith(caches.match(e.request).then(function(t){return t?(console.log("[fetch] Returning from ServiceWorker cache: ",e.request.url),function(e){return caches.open(n).then(function(t){return t.match(e).then(function(e){return e||Promise.reject("no-match")})})}(e.request)):(console.log("[fetch] Returning from server: ",e.request.url),function(e,t){return new Promise(function(s,n){var r=setTimeout(n,t);fetch(e).then(function(e){clearTimeout(r),s(e)},n)})}(e.request,200))})),e.waitUntil(function(e){return caches.open(n).then(function(t){return fetch(e).then(function(s){return t.put(e,s)})})}(e.request)))}),self.addEventListener("install",function(e){console.log("[ServiceWorker] Install"),e.waitUntil(caches.open(n).then(function(e){return console.log("[ServiceWorker] Caching app shell"),e.addAll(r)}))}),self.addEventListener("activate",e=>{e.waitUntil(Promise.all([caches.keys().then(e=>Promise.all(e.map(e=>{if(n!==e&&e.startsWith("ccm-news-feed-"))return caches.delete(e)}))),i("newsFeed","2")]))}),self.addEventListener("sync",s=>{"send-posts"===s.tag&&s.waitUntil(h(e,"readwrite").then(e=>d(e)).then(t=>Promise.all(t.map(t=>fetch(t.url).then(function(s){return s.ok?f(t.id,e):new Error("Could not send post with id: "+t.id)}).catch(()=>new Error("Seems to be still offline."))))).then(()=>{a()})),"get-posts"===s.tag&&s.waitUntil(h(t,"readwrite").then(e=>d(e)).then(e=>Promise.all(e.map(e=>fetch(e.url).then(s=>{if(s.ok)return f(e.id,t),s.json();new Error("Could not perform get-posts-request with id:"+e.id)}).then(e=>{l(e)}).catch(()=>new Error("Seems to be still offline."))))))}),self.addEventListener("message",e=>{switch(console.log("[SW-News-Feed] Message: ",e),e.data.tag){case"send-post":o(e.data.url);break;case"get-posts":c(e.data.url);break;default:console.log("No handler in sw for event:",e)}});const o=t=>{fetch(t).then(e=>{a()}).catch(()=>{h(e,"readwrite").then(e=>{u(e,{url:t,id:Math.floor(1e3*Math.random()+1)})}).then(()=>{self.registration.sync.register("send-posts")}).catch(e=>{console.log("Error: ",e)})})},c=e=>{fetch(e).then(e=>e.json()).then(e=>{l(e)}).catch(()=>{h(t,"readwrite").then(t=>{u(t,{url:e,id:Math.floor(1e3*Math.random()+1)})}).then(()=>{self.registration.sync.register("get-posts")}).catch(e=>{console.log("Error: ",e)})})},a=()=>{self.clients.matchAll({includeUncontrolled:!0}).then(function(e){e.forEach(function(e){e.postMessage({tag:"posts-sent",msg:"Post send"})})})},l=e=>{self.clients.matchAll({includeUncontrolled:!0}).then(function(t){t.forEach(function(t){t.postMessage({tag:"got-posts",posts:e,msg:e})})})},i=function(n,r){return new Promise((o,c)=>{const a=self.indexedDB.open(n,r);a.onerror=function(e){c("Database error: "+e.target.error)},a.onupgradeneeded=function(n){let r=n.target.result;r.createObjectStore(t,{keyPath:"id",autoIncrement:!0}),r.createObjectStore(e,{keyPath:"id",autoIncrement:!0}),s=r},a.onsuccess=function(e){s=e.target.result,o(e.target.result)}})},h=function(e,t){return new Promise((n,r)=>{let o={};s?o=s.transaction(e,t).objectStore(e):i("newsFeed","2").then(()=>{o=s.transaction(e,t).objectStore(e)}),n(o)})},u=function(e,t){return new Promise((s,n)=>{e.add(t).onsuccess=s})},d=function(e){return new Promise(function(t,s){let n=e.getAll();n.onsuccess=function(e){t(e.target.result)},n.onerror=function(){s("Could not get all posts: "+n.error)}})},f=function(e,t){return new Promise((s,n)=>{h(t,"readwrite").then(function(t){t.delete(e).onsuccess=function(t){console.log("Delete successfull:",e),s("Successfull delete key: "+e)}})})}}();