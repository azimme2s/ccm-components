function fromNetwork(e,t){return new Promise(function(s,n){var o=setTimeout(n,t);fetch(e).then(function(e){clearTimeout(o),s(e)},n)})}function fromCache(e){return caches.open(CACHE_NAME).then(function(t){return t.match(e).then(function(e){return e||Promise.reject("no-match")})})}function update(e){return caches.open(CACHE_NAME).then(function(t){return fetch(e).then(function(s){return t.put(e,s)})})}const DB_NAME="newsFeed",DB_VERSION="2",SEND_POST_STORE="send-post-requests",GET_POSTS_STORE="get-posts-requests";let idb;const MSG_FROM_PAGE_GET_POSTS="get-posts",MSG_FROM_PAGE_SEND_POST="send-post",MSG_TO_PAGE_GOT_POSTS="got-posts",MSG_TO_PAGE_POSTS_SENT="posts-sent",SYNC_SEND_POSTS="send-posts",SYNC_GET_POSTS="get-posts";let CACHE_NAME="SE1PWA",cache_urls=["ccm.se1-menu.js","ccm.nav-hamburger.js","style.css","ccm.sw-notification.js","configs.js","right.css","feedback.png","ccm.feedback.js","ccm.news_feed.js","https://kaul.inf.h-brs.de/data/2017/se1/le00.html","https://kaul.inf.h-brs.de/data/2017/se1/le01.html","https://kaul.inf.h-brs.de/data/2017/se1/le02.html","https://kaul.inf.h-brs.de/data/2017/se1/le03.html","https://kaul.inf.h-brs.de/data/2017/se1/le04.html","https://kaul.inf.h-brs.de/data/2017/se1/le05.html","https://kaul.inf.h-brs.de/data/2017/se1/le06.html","https://kaul.inf.h-brs.de/data/2017/se1/le07.html","https://kaul.inf.h-brs.de/data/2017/se1/le08.html","https://kaul.inf.h-brs.de/data/2017/se1/le09.html","https://kaul.inf.h-brs.de/data/2017/se1/le10.html","https://kaul.inf.h-brs.de/data/2017/se1/le11.html","https://kaul.inf.h-brs.de/data/2017/se1/le12.html","https://kaul.inf.h-brs.de/data/2017/se1/le13.html","https://moritzkemp.github.io/ccm-route_node/ccm.route_node.js","https://akless.github.io/ccm/version/ccm-11.5.0.min.js","https://tkless.github.io/ccm-components/lib/bootstrap/css/font-face.css","https://tkless.github.io/ccm-components/lib/bootstrap/css/bootstrap.css","https://kaul.inf.h-brs.de/data/ccm/form/ccm.form.js","https://kaul.inf.h-brs.de/data/ccm/upload/ccm.upload.js","https://kaul.inf.h-brs.de/data/ccm/highlight/ccm.highlight.js","https://kaul.inf.h-brs.de/data/ccm/show_solutions/ccm.show_solutions.js","https://kaul.inf.h-brs.de/data/ccm/exercise/ccm.exercise.js","https://kaul.inf.h-brs.de/data/ccm/form/resources/default.css","https://akless.github.io/ccm-components/user/versions/ccm.user-2.0.0.min.js","https://akless.github.io/ccm-components/log/versions/ccm.log-1.0.0.min.js","https://akless.github.io/ccm-components/content/versions/ccm.content-2.0.0.min.js","https://akless.github.io/ccm/ccm.js","https://kaul.inf.h-brs.de/data/2017/se1/json/log_configs.js","https://akless.github.io/ccm-components/libs/md5/md5.min.js"];self.addEventListener("fetch",function(e){/https:\/\/kaul.inf.h-brs.de\/login\/login.php.*/.test(e.request.url.href)||e.respondWith(caches.match(e.request).then(function(t){return t?(console.log("[fetch] Returning from ServiceWorker cache: ",e.request.url),fromCache(e.request)):(console.log("[fetch] Returning from server: ",e.request.url),fromNetwork(e.request,400))}))}),self.addEventListener("install",function(e){console.log("[ServiceWorker] Install"),e.waitUntil(caches.open(CACHE_NAME).then(function(e){return console.log("[ServiceWorker] Caching app shell"),e.addAll(cache_urls)}))}),self.addEventListener("activate",e=>{e.waitUntil(Promise.all([caches.keys().then(e=>Promise.all(e.map(e=>{if(CACHE_NAME!==e&&e.startsWith("SE1PWA"))return caches.delete(e)}))),console.log("[ServiceWorker] is activated"),openDatabase("newsFeed","2")]))}),self.addEventListener("sync",e=>{"send-posts"===e.tag&&e.waitUntil(objectStore(SEND_POST_STORE,"readwrite").then(e=>getAllObjects(e)).then(e=>Promise.all(e.map(e=>fetch(e.url).then(function(t){return t.ok?deleteObject(e.id,SEND_POST_STORE):new Error("Could not send post with id: "+e.id)}).catch(()=>new Error("Seems to be still offline."))))).then(()=>{notifyPagesPostsSent()})),"get-posts"===e.tag&&e.waitUntil(objectStore(GET_POSTS_STORE,"readwrite").then(e=>getAllObjects(e)).then(e=>Promise.all(e.map(e=>fetch(e.url).then(t=>{if(t.ok)return deleteObject(e.id,GET_POSTS_STORE),t.json();new Error("Could not perform get-posts-request with id:"+e.id)}).then(e=>{notifyPagesGotPosts(e)}).catch(()=>new Error("Seems to be still offline."))))))}),self.addEventListener("message",e=>{switch(console.log("[SW-News-Feed] Message: ",e),e.data.tag){case"send-post":sendNewPost(e.data.url);break;case"get-posts":getPosts(e.data.url);break;default:console.log("No handler in sw for event:",e)}});const sendNewPost=e=>{fetch(e).then(e=>{notifyPagesPostsSent()}).catch(()=>{objectStore(SEND_POST_STORE,"readwrite").then(t=>{addObject(t,{url:e,id:Math.floor(1e3*Math.random()+1)})}).then(()=>{self.registration.sync.register("send-posts")}).catch(e=>{console.log("Error: ",e)})})},getPosts=e=>{fetch(e).then(e=>e.json()).then(e=>{notifyPagesGotPosts(e)}).catch(()=>{objectStore(GET_POSTS_STORE,"readwrite").then(t=>{addObject(t,{url:e,id:Math.floor(1e3*Math.random()+1)})}).then(()=>{self.registration.sync.register("get-posts")}).catch(e=>{console.log("Error: ",e)})})},notifyPagesPostsSent=()=>{self.clients.matchAll({includeUncontrolled:!0}).then(function(e){e.forEach(function(e){e.postMessage({tag:"posts-sent",msg:"Post send"})})})},notifyPagesGotPosts=e=>{self.clients.matchAll({includeUncontrolled:!0}).then(function(t){t.forEach(function(t){t.postMessage({tag:"got-posts",posts:e,msg:e})})})},openDatabase=function(e,t){return new Promise((s,n)=>{const o=self.indexedDB.open(e,t);o.onerror=function(e){n("Database error: "+e.target.error)},o.onupgradeneeded=function(e){let t=e.target.result;t.createObjectStore(GET_POSTS_STORE,{keyPath:"id",autoIncrement:!0}),t.createObjectStore(SEND_POST_STORE,{keyPath:"id",autoIncrement:!0}),idb=t},o.onsuccess=function(e){idb=e.target.result,s(e.target.result)}})},objectStore=function(e,t){return new Promise((s,n)=>{let o={};idb?o=idb.transaction(e,t).objectStore(e):openDatabase(DB_NAME,"2").then(()=>{o=idb.transaction(e,t).objectStore(e)}),s(o)})},addObject=function(e,t){return new Promise((s,n)=>{e.add(t).onsuccess=s})},getAllObjects=function(e){return new Promise(function(t,s){let n=e.getAll();n.onsuccess=function(e){t(e.target.result)},n.onerror=function(){s("Could not get all posts: "+n.error)}})},deleteObject=function(e,t){return new Promise((s,n)=>{objectStore(t,"readwrite").then(function(t){t.delete(e).onsuccess=function(t){console.log("Delete successfull:",e),s("Successfull delete key: "+e)}})})};